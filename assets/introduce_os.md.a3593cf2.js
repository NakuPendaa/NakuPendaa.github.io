import{_ as a,o as i,c as p,O as t}from"./chunks/framework.3639b6a9.js";const o="/image/image__UeDuUnAHO.png",e="/image/image_oZwi18MsIr.png",m="/image/image_9YV-WD4-70.png",g="/image/image_JfTaHvOaSM.png",s="/image/image_a71p9CXQQC.png",r="/image/image_risfHZhITd.png",c="/image/image_O8xS5MN2LL.png",l="/image/image_bWu4N0OAq2.png",_="/image/image_1BvrXHlPrE.png",n="/image/image_gKr8gpod4Q.png",h="/image/image_Ux4XWJkWOT.png",u="/image/image_RuKhoi_MoW.png",b="/image/image_66DkP6RX-v.png",q="/image/image_oFq2cOpv9z.png",k="/image/image_2oB89wftVz.png",d="/image/image_zH3S2CT-QZ.png",f="/image/image_dyTZSJJ9uS.png",O="/image/image_zZVT-CHhir.png",x="/image/image_RTKHutws2v.png",I="/image/image_7MtYGMyw1N.png",P="/image/image_r_xmXjZwMU.png",C="/image/image_IgNW2RbSTi.png",S="/image/image_r83mDtUshf.png",T="/image/image_a8qD93h6Yq.png",F="/image/image_-xGUhLtmSA.png",A="/image/image_2Pjf60NdUe.png",L="/image/image_lz_rM7_QL8.png",v="/image/image_UZDDQO60fw.png",D="/image/image_DSJT5O3GBe.png",N="/image/image_U_QeW2DMwU.png",M="/image/image_yFvQaXV-Lo.png",R="/image/image_eScx-fSE7L.png",U="/image/image_U25aNzBllL.png",w="/image/image_Yi2Z8SssO0.png",V="/image/image_hLpuoIklIp.png",j="/image/image_V_EzZsKhQT.png",H="/image/image_A-BXenDdyr.png",Q="/image/image_k49_fLb53C.png",W="/image/image_2VofWN5b21.png",X="/image/image_7j2v-83X7x.png",y="/image/image_jHV7xD-_gM.png",J="/image/image_oCCV9RS1q4.png",B="/image/image_vqaGQm1lNU.png",E="/image/image_na4QkAlS4z.png",G="/image/image_buFMkPjH6A.png",Y="/image/image_Ix69T4_hlQ.png",Z="/image/image_Lj7WZwpCfp.png",z="/image/image_pAArM7AyD6.png",K="/image/image_ARvDXj2zN3.png",$="/image/image_mZUvDpCq40.png",aa="/image/image_wGPGlbeR7S.png",ia="/image/image_2G_TsFoRvx.png",pa="/image/image_C1pH-VNQHV.png",ta="/image/image_2Y-mWz1Jv8.png",oa="/image/image_Ll6KVQ-oTA.png",ea="/image/image_bF5eVgD4JB.png",ma="/image/image_7nFo66267r.png",ga="/image/image_I0Y6cy09Ev.png",sa="/image/image_OqgWjs1aAt.png",ra="/image/image_OvKyG2N1gM.png",ca="/image/image_oxYQyAlzB0.png",la="/image/image_Tt0TugNoQx.png",_a="/image/image_wp7eckcvqW.png",na="/image/image_2AlT_Rky33.png",ha="/image/image_v0Iyuyv6Gv.png",ua="/image/image_UhasfPNkl7.png",ba="/image/image_5so7617Iav.png",qa="/image/image_Ah0V-tocgq.png",ka="/image/image__Mif3ph7-E.png",da="/image/image_BCqH8ws3ds.png",fa="/image/image_AhTKW98LOY.png",Oa="/image/image_xGpP_cR72x.png",xa="/image/image_uhA8d0cmB_.png",Ia="/image/image_YeJVhrtwX0.png",Pa="/image/image_Bo3xMFDQlZ.png",Ca="/image/image_HyolmXot4w.png",Sa="/image/image_x55TxBenGj.png",Ta="/image/image_cXF1ibp5Br.png",Fa="/image/image_F6DkClm76F.png",Aa="/image/image_OS1HYMnE7Y.png",La="/image/image_s3SRraJW8R.png",va="/image/image_WPeTm6p94k.png",Da="/image/image_9G6lvyzT5r.png",Na="/image/image_3Eo49aXCgO.png",Ma="/image/image_CKNPygPbEz.png",Ra="/image/image_h5jyxQdZEQ.png",Ua="/image/image_p3Xzq_vsxF.png",wa="/image/image_dRVD2mbb9m.png",Va="/image/image_wEkSd58uXb.png",ja="/image/image_-x1lLfYShJ.png",Ha="/image/image_sOL_rYiBBN.png",Qa="/image/image_Ykt1_PhuAf.png",Wa="/image/image_xhjBhnnnv1.png",Xa="/image/image_BGpLxjf8Lw.png",ya="/image/image_7pclMtPK3P.png",Ja="/image/image_hXsyex8XTH.png",Ba="/image/image_mIcxcYfkwL.png",Ea="/image/image_i9Rgp7x3gH.png",Ga="/image/image_jt-VgHuoQM.png",Ya="/image/image_oBQbSm4Kpt.png",Za="/image/image_-HJv5_aCHA.png",za="/image/image__7DcIQIFf5.png",Ka="/image/image_o_RsLASl5J.png",$a="/image/image_RlCJcAsGla.png",ai="/image/image_PM2QL41OII.png",ii="/image/image_qVjgqlTimm.png",pi="/image/image_Za_on4kwoo.png",ti="/image/image_EM2Jy_iGpj.png",oi="/image/image_14ufC3VOpa.png",ei="/image/image_qdR3tX8eo-.png",mi="/image/image_Vt-2Kb7GJO.png",gi="/image/image_-rCjSHrETy.png",si="/image/image_ZUgmVc9y0l.png",ri="/image/image_ZR33tscJ_X.png",ci="/image/image_UpjDlIe9gs.png",li="/image/image_IM0jovHVo4.png",_i="/image/image_XxXMZ3T4k1.png",ni="/image/image_TxFaEGwgoR.png",hi="/image/image_llEj97IZzB.png",ui="/image/image_Xp7Zt8fVFD.png",bi="/image/image_5j4eb0_uxw.png",qi="/image/image_6medMS4QOs.png",ki="/image/image_RP8kcfE9Ka.png",di="/image/image_rssdSDerOH.png",fi="/image/image_ta5euXvz8_.png",Oi="/image/image_CC7bGHc2CC.png",xi="/image/image_89WGjSqZmx.png",Ii="/image/image_v2rqyiyBFk.png",Pi="/image/image_E_rfCMB5M8.png",Ci="/image/image_JVgLDvdsM9.png",Si="/image/image_wme7jFYWnw.png",Ti="/image/image_hlNwvADRnU.png",Fi="/image/image_o5s_lg2s3O.png",Ai="/image/image_rr0uhdYXUC.png",Li="/image/image_y7hLphwMzc.png",vi="/image/image_zz9ntxWnpp.png",Di="/image/image_DN-sopUcx6.png",Ni="/image/image_T0D1eJTmxK.png",Mi="/image/image_9fn-JKEqpj.png",Ri="/image/image_CIua4P6GbT.png",Ui="/image/image_Xt2YLWImLU.png",wi="/image/image_a_EI5Qp8Ge.png",Vi="/image/image_sZowWI9CQr.png",ji="/image/image_U-AHHZGx8L.png",Hi="/image/image_nd0kDe2jX6.png",Qi="/image/image_DCjadh5lrg.png",Wi="/image/image_mttJfIO6O9.png",Xi="/image/image_eWayxz6RgE.png",yi="/image/image_wAOslDc0HY.png",Ji="/image/image_49sbpZTbJV.png",Bi="/image/image_7ngWFJdFA3.png",Ei="/image/image_q1pnjWWSEK.png",Gi="/image/image_DMWMHFcu_Y.png",Yi="/image/image_TSv8COucMV.png",Zi="/image/image_4qrIk4YY46.png",zi="/image/image_e7EBz-Owv1.png",Ki="/image/image_tDxjOfMq1e.png",$i="/image/image_2i5887Wjmw.png",ap="/image/image_wQrFSBJ-TE.png",ip="/image/image_m1LSNoVMxX.png",pp="/image/image_IYay1Spbq3.png",hp=JSON.parse('{"title":"操作系统","description":"","frontmatter":{},"headers":[],"relativePath":"introduce/os.md","filePath":"introduce/os.md"}'),tp={name:"introduce/os.md"},op=t('<h1 id="操作系统" tabindex="-1">操作系统 <a class="header-anchor" href="#操作系统" aria-label="Permalink to &quot;操作系统&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>该文档并没有进行整理和调整，只是临时展示，等待后续调整。</p></div><ul><li><a href="#1绪论--">1、绪论 </a><ul><li><a href="#操作系统的定义-">操作系统的定义 </a></li><li><a href="#操作系统的功能---">操作系统的功能 </a></li><li><a href="#操作系统的接口用户接口命令行和图形界面程序接口系统调用">操作系统的接口（用户接口：命令行和图形界面、程序接口：系统调用）</a></li><li><a href="#操作系统的发展简史和分类">操作系统的发展简史和分类</a></li><li><a href="#操作系统的结构内核态与用户态中断与异常系统调用">操作系统的结构（内核态与用户态，中断与异常，系统调用）。</a></li></ul></li><li><a href="#2进程与线程--">2、进程与线程 </a><ul><li><a href="#进程的基本概念-">进程的基本概念 </a></li><li><a href="#进程状态与转换-">进程状态与转换 </a></li><li><a href="#进程控制--">进程控制 </a></li><li><a href="#进程同步临界区互斥和信号量及硬件与软件实现方法">进程同步（临界区、互斥和信号量及硬件与软件实现方法）</a></li><li><a href="#经典进程的同步问题生产者与消费者读者与写者和哲学家进餐">经典进程的同步问题（生产者与消费者、读者与写者和哲学家进餐）</a></li><li><a href="#进程通信共享存储消息传递和管道">进程通信（共享存储、消息传递和管道）</a></li><li><a href="#线程概念和多线程模型">线程（概念和多线程模型）。</a></li></ul></li><li><a href="#3处理机调度与死锁-">3、处理机调度与死锁 </a><ul><li><a href="#处理机调度的基本概念-">处理机调度的基本概念 </a></li><li><a href="#调度时机切换与过程--">调度时机、切换与过程 </a></li><li><a href="#调度的基本原则--">调度的基本原则 </a></li><li><a href="#调度方式-">调度方式 </a></li><li><a href="#典型的调度算法先来线服务短任务短进程短线程优先调度算法时间片轮转法优先级调度多级反馈队列调度">典型的调度算法（先来线服务，短任务、短进程、短线程优先调度算法，时间片轮转法，优先级调度，多级反馈队列调度）</a></li><li><a href="#产生死锁的原因和必要条件以及预防死锁的方法">产生死锁的原因和必要条件以及预防死锁的方法。</a></li></ul></li><li><a href="#4内存管理--">4、内存管理 </a><ul><li><a href="#内存管理概念程序的装入和链接逻辑地址与物理地址内存保护">内存管理概念（程序的装入和链接、逻辑地址与物理地址、内存保护）</a></li><li><a href="#交换与覆盖-">交换与覆盖 </a></li><li><a href="#连续分配方式单一连续和分区">连续分配方式（单一连续和分区）</a></li><li><a href="#非连续分配方式分页分段和段页式">非连续分配方式（分页、分段和段页式）</a></li><li><a href="#虚拟内存管理虚拟内存的基本概念请求分页分段段页式存储器管理方式页面置换算法">虚拟内存管理（虚拟内存的基本概念、请求分页、分段、段页式存储器管理方式、页面置换算法）</a></li><li><a href="#常用的页面置换算法最佳置换OPT算法先进先出置换FIFO算法最近最少使用置换LRU算法时钟置换CLOCK算法">常用的页面置换算法（最佳置换OPT算法、先进先出置换FIFO算法、最近最少使用置换LRU算法、时钟置换CLOCK算法）</a></li></ul></li><li><a href="#5设备管理">5、设备管理</a><ul><li><a href="#IO管理IO设备IO管理目标IO管理功能IO应用接IO控制方式和IO软件层次结构">I/O管理（I/O设备、I/O管理目标、I/O管理功能、I/O应用接⼝、I/O控制方式和I/O软件层次结构）</a></li><li><a href="#IO内核子系统IO调度概念高速缓存与缓冲区设备分配与回收假脱机技术SPOOLing">I/O内核子系统（I/O调度概念、高速缓存与缓冲区、设备分配与回收、假脱机技术(SPOOLing)</a></li></ul></li><li><a href="#6文件系统--">6、文件系统 </a><ul><li><a href="#文件系统基础文件概念文件结构--顺序文件索引文件和索引顺序文件目录结构-文件控制块和索引节点单级目录结构和两级目录结构树形目录结构和图形目录结构文件共享--共享动机共享方式和共享语义文件保护--访问类型和访问控制">文件系统基础（文件概念，文件结构--顺序文件、索引文件和索引顺序文件，目录结构-文件控制块和索引节点、单级目录结构和两级目录结构、树形目录结构和图形目录结构，文件共享--共享动机、共享方式和共享语义，文件保护--访问类型和访问控制）</a></li><li><a href="#文件系统实现文件系统层次结构目录实现文件实现">文件系统实现（文件系统层次结构，目录实现，文件实现）</a></li><li><a href="#磁盘组织与管理磁盘的结构磁盘调度算法和磁盘的管理">磁盘组织与管理（磁盘的结构、磁盘调度算法和磁盘的管理）</a></li><li><a href="#常用的磁盘调度算法FIFOSSTFSCANC-SCAN">常用的磁盘调度算法（FIFO，SSTF，SCAN，C-SCAN）。</a></li></ul></li></ul><hr><h3 id="操作系统的定义" tabindex="-1">操作系统的定义 <a class="header-anchor" href="#操作系统的定义" aria-label="Permalink to &quot;操作系统的定义&amp;#x20;&quot;">​</a></h3><p><em>是管理计算机硬件与软件资源的计算机程序</em></p><h3 id="操作系统的功能" tabindex="-1">操作系统的功能 <a class="header-anchor" href="#操作系统的功能" aria-label="Permalink to &quot;操作系统的功能  &amp;#x20;&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><p><img src="'+e+'" alt=""></p><p><em>进程管理、存储管理、设备管理、文件管理、作业管理</em></p><h3 id="操作系统的接口-用户接口-命令行和图形界面、程序接口-系统调用" tabindex="-1">操作系统的接口（用户接口：命令行和图形界面、程序接口：系统调用） <a class="header-anchor" href="#操作系统的接口-用户接口-命令行和图形界面、程序接口-系统调用" aria-label="Permalink to &quot;操作系统的接口（用户接口：命令行和图形界面、程序接口：系统调用）&quot;">​</a></h3><p><img src="'+m+'" alt=""></p><ul><li>操作系统提供的接口分为两类：<strong><code>命令接口和程序接口</code></strong></li><li><code>命令接口</code>：用户可以<code>直接</code>使用的，利用这些操作命令来组织和控制作业的执行</li><li><code>程序接口</code>：用户通过程序<code>间接</code>使用的，编程人员可以使用它们来请求操作系统服务</li></ul><h3 id="操作系统的发展简史和分类" tabindex="-1">操作系统的发展简史和分类 <a class="header-anchor" href="#操作系统的发展简史和分类" aria-label="Permalink to &quot;操作系统的发展简史和分类&quot;">​</a></h3><ol><li><p>手工操作阶段</p><p>缺点：效率太低，计算机大部分时间都等待用户输入。</p></li><li><p>批处理阶段</p><ol><li><p>单道批处理系统</p><p>优点：缓解了一定程度的人机速度矛盾，资源利用率有所提升。</p><p>缺点：内存中仅能有- -道程序运行，只有该程序运行结束之后才 能调入下一道程序。CPU有大量的时间是在空闲等待I/0完成。资源利 用率依然很低。</p></li><li><p>多道批处理系统</p><p>优点:多道程序并发执行，共享计算机资源。资源利用率大幅提升，CPU和其他资源保持“忙碌”状态， 系统吞吐量增大。</p><p>缺点：用户响应时间长，没有人机交互功能(用户提交自己的作业之后就只能等待计算机处理完成， 中间不能控制自己的作业执行) c.分时操作系统 <img src="'+g+'" alt=""></p></li></ol><p> d.实时操作系统</p><p><img src="'+s+'" alt=""></p><p>e.其他系统</p><p><img src="'+r+'" alt=""></p></li></ol><h4 id="操作系统的结构-内核态与用户态-中断与异常-系统调用-。" tabindex="-1">操作系统的结构（内核态与用户态，中断与异常，系统调用）。 <a class="header-anchor" href="#操作系统的结构-内核态与用户态-中断与异常-系统调用-。" aria-label="Permalink to &quot;操作系统的结构（内核态与用户态，中断与异常，系统调用）。&quot;">​</a></h4><blockquote><p>指令</p></blockquote><p><img src="'+c+'" alt=""></p><blockquote><p>处理器状态</p></blockquote><p><img src="'+l+'" alt=""></p><blockquote><p>程序分类</p></blockquote><p><img src="'+_+'" alt=""></p><blockquote><p>体系结构</p></blockquote><p><img src="'+n+'" alt=""></p><p><img src="'+h+'" alt=""></p><blockquote><p>中断</p></blockquote><p><img src="'+u+'" alt=""></p><p><img src="'+b+'" alt=""></p><p><img src="'+q+'" alt=""></p><blockquote><p>系统调用</p></blockquote><p><img src="'+k+'" alt=""></p><h3 id="_2、进程与线程" tabindex="-1">2、进程与线程 <a class="header-anchor" href="#_2、进程与线程" aria-label="Permalink to &quot;2、进程与线程 &amp;#x20;&quot;">​</a></h3><h4 id="进程的基本概念" tabindex="-1">进程的基本概念 <a class="header-anchor" href="#进程的基本概念" aria-label="Permalink to &quot;进程的基本概念&amp;#x20;&quot;">​</a></h4><p><strong>进程</strong>：一个具有一定独立功能的程序关于某个数据集合的一次运行活动，是系统进行资源分配和调度运行的基本单位</p><h4 id="进程状态与转换" tabindex="-1">进程状态与转换 <a class="header-anchor" href="#进程状态与转换" aria-label="Permalink to &quot;进程状态与转换&amp;#x20;&quot;">​</a></h4><blockquote><p>三种基本状态</p></blockquote><p><img src="'+d+'" alt=""></p><p><img src="'+f+'" alt=""></p><blockquote><p>进程转换</p></blockquote><p><img src="'+O+'" alt=""></p><p><strong>活动阻塞态→静止阻塞态</strong> 由两种情况会发生这种挂起变化。</p><p>1、若当前不存在活动就绪进程，则至少需要一个活动阻塞进程由内存对换至外存成为静止阻塞进程，以腾出空间从外存调入静止就绪进程使其称为活动就绪进程。</p><p>2、操作系统根据当前的资源状态和新跟那个要求决定。 <strong>静止阻塞态→活动阻塞态</strong> 当系统已经得知导致该进程阻塞的事件即将结束和内存有很大的空闲的空间时，则会从外存调入静止阻塞态使其称为活动阻塞态。 <strong>静止阻塞态→静止就绪态</strong> 静止阻塞进程所需的资源得到满足或等待的事件已经完成。 <strong>静止就绪态→活动就绪态</strong> 有三种情况会发生种情况：</p><p>1、外存的静止就绪进程具有比内存中的活动就绪进程更高的优先级。</p><p>2、内存出现一大块空闲空间。</p><p>3、当前内存中没有活动就绪进程 <strong>活动就绪态→静止就绪态</strong> 这种状态变化主要是由于系统调节负荷的需要，或者是系统优化性能的需求，而将某些不需要运行的活动就绪进程由内存换出至外存。 <strong>运行态挂起→静止就绪态</strong> 原因：程序出现错误或异常，或者是对运行进程进行分析的需要</p><h4 id="进程控制" tabindex="-1">进程控制 <a class="header-anchor" href="#进程控制" aria-label="Permalink to &quot;进程控制 &amp;#x20;&quot;">​</a></h4><p>进程控制的主要功能是对系统中的所有进程实施有效的管理，它具有创建新进程、撤销已有进程、实现 进程状态转换等功能。</p><p>简化理解：进程控制就是要实现进程状态的转换</p><p>用<strong>原语</strong>实现进程控制。原语的<strong>特点</strong>是执行期间<strong>不允许中断</strong>，只能一气呵成。 这种不可被中断的操作即<strong>原子操作</strong>。 原语采用“<strong>关中断</strong>指令”和“<strong>开中断</strong>指令”实现</p><h4 id="进程同步-临界区、互斥和信号量及硬件与软件实现方法" tabindex="-1">进程同步（临界区、互斥和信号量及硬件与软件实现方法） <a class="header-anchor" href="#进程同步-临界区、互斥和信号量及硬件与软件实现方法" aria-label="Permalink to &quot;进程同步（临界区、互斥和信号量及硬件与软件实现方法）&quot;">​</a></h4><p>进程同步：</p><p><img src="'+x+'" alt=""></p><p>进程互斥：</p><p><img src="'+I+'" alt=""></p><p>临界资源：</p><p>我们把一个时间段内只允许一个进程使用的资源称为临界资源。许多物理设备(比如摄像头、打印机)都属于临界资源。此外还有许多变量、数据、内存缓冲区等都属于临界资源。 对临界资源的访问，必须互斥地进行。互斥，亦称间接制约关系。进程互斥指当一个进程访问某临界资源时，另一个想要访问该临界资源的进程必须等待。当前访问临界资源的进程访问结束，释放该资源之后,另一个进程才能去访问临界资源。 </p><p>临界资源互斥访问四部分：</p><p><img src="'+P+'" alt=""></p><p>临界资源四原则：</p><p><img src="'+C+'" alt=""></p><hr><blockquote><p>📌进程互斥软件实现方法</p></blockquote><p><img src="'+S+'" alt=""></p><p><img src="'+T+'" alt=""></p><p><img src="'+F+'" alt=""></p><p><img src="'+A+'" alt=""></p><hr><blockquote><p>📌进程互斥硬件实现方法</p></blockquote><p><img src="'+L+'" alt=""></p><p><img src="'+v+'" alt=""></p><p><img src="'+D+'" alt=""></p><hr><blockquote><p>📌信号量</p></blockquote><p><img src="'+N+'" alt=""></p><p><img src="'+M+'" alt=""></p><p><img src="'+R+'" alt=""></p><p><img src="'+U+'" alt=""></p><p><img src="'+w+'" alt=""></p><p><img src="'+V+'" alt=""></p><p><img src="'+j+'" alt=""></p><h4 id="经典进程的同步问题-生产者与消费者、读者与写者和哲学家进餐" tabindex="-1">经典进程的同步问题（生产者与消费者、读者与写者和哲学家进餐） <a class="header-anchor" href="#经典进程的同步问题-生产者与消费者、读者与写者和哲学家进餐" aria-label="Permalink to &quot;经典进程的同步问题（生产者与消费者、读者与写者和哲学家进餐）&quot;">​</a></h4><blockquote><p>📌生产者与消费者</p></blockquote><p><img src="'+H+'" alt=""></p><blockquote><p>📌读者与写者</p></blockquote><p><img src="'+Q+'" alt=""></p><h4 id="进程通信-共享存储、消息传递和管道" tabindex="-1">进程通信（共享存储、消息传递和管道） <a class="header-anchor" href="#进程通信-共享存储、消息传递和管道" aria-label="Permalink to &quot;进程通信（共享存储、消息传递和管道）&quot;">​</a></h4><blockquote><p>📌共享存储</p></blockquote><p><img src="'+W+'" alt=""></p><blockquote><p>📌管道</p></blockquote><p><img src="'+X+'" alt=""></p><blockquote><p>📌消息传递</p></blockquote><p><img src="'+y+'" alt=""></p><hr><h4 id="线程-概念和多线程模型-。" tabindex="-1">线程（概念和多线程模型）。 <a class="header-anchor" href="#线程-概念和多线程模型-。" aria-label="Permalink to &quot;线程（概念和多线程模型）。&quot;">​</a></h4><p>线程是一个基本的CPU执行单元也是程序执行流最小单位。</p><p>引入线程后，进程只作为除CPU之外的系统资源分配单元。</p><p>进程是资源<strong>分配</strong>的基本单位，线程是资源<strong>调度</strong>的基本单位。</p><blockquote><p>📌多线程模型</p></blockquote><p><img src="'+J+'" alt=""></p><p><img src="'+B+'" alt=""></p><p><img src="'+E+'" alt=""></p><h3 id="_3、处理机调度与死锁" tabindex="-1">3、处理机调度与死锁 <a class="header-anchor" href="#_3、处理机调度与死锁" aria-label="Permalink to &quot;3、处理机调度与死锁&amp;#x20;&quot;">​</a></h3><h4 id="处理机调度的基本概念" tabindex="-1">处理机调度的基本概念 <a class="header-anchor" href="#处理机调度的基本概念" aria-label="Permalink to &quot;处理机调度的基本概念&amp;#x20;&quot;">​</a></h4><p>按某种算法选择一个进程将处理机分配给它</p><p><img src="'+G+'" alt=""></p><h4 id="调度时机、切换与过程" tabindex="-1">调度时机、切换与过程 <a class="header-anchor" href="#调度时机、切换与过程" aria-label="Permalink to &quot;调度时机、切换与过程 &amp;#x20;&quot;">​</a></h4><p><img src="'+Y+'" alt=""></p><h4 id="调度的基本原则" tabindex="-1">调度的基本原则 <a class="header-anchor" href="#调度的基本原则" aria-label="Permalink to &quot;调度的基本原则 &amp;#x20;&quot;">​</a></h4><blockquote><p>CPU利用率</p></blockquote><p><img src="'+Z+'" alt=""></p><blockquote><p>系统吞吐量</p></blockquote><p><img src="'+z+'" alt=""></p><blockquote><p>周转时间</p></blockquote><p><img src="'+K+'" alt=""></p><p><img src="'+$+'" alt=""></p><blockquote><p>等待时间</p></blockquote><p><img src="'+aa+'" alt=""></p><blockquote><p>响应时间</p></blockquote><p><img src="'+ia+'" alt=""></p><h4 id="调度方式" tabindex="-1">调度方式 <a class="header-anchor" href="#调度方式" aria-label="Permalink to &quot;调度方式&amp;#x20;&quot;">​</a></h4><p><img src="'+pa+'" alt=""></p><h4 id="典型的调度算法-先来线服务-短任务、短进程、短线程优先调度算法-时间片轮转法-优先级调度-多级反馈队列调度" tabindex="-1">典型的调度算法（先来线服务，短任务、短进程、短线程优先调度算法，时间片轮转法，优先级调度，多级反馈队列调度） <a class="header-anchor" href="#典型的调度算法-先来线服务-短任务、短进程、短线程优先调度算法-时间片轮转法-优先级调度-多级反馈队列调度" aria-label="Permalink to &quot;典型的调度算法（先来线服务，短任务、短进程、短线程优先调度算法，时间片轮转法，优先级调度，多级反馈队列调度）&quot;">​</a></h4><blockquote><p>📌先来先服务（FCFS）</p></blockquote><p><img src="'+ta+'" alt=""></p><p><img src="'+oa+'" alt=""></p><hr><blockquote><p>📌短作业优先（SJF）</p></blockquote><p><img src="'+ea+'" alt=""></p><p><img src="'+ma+'" alt=""></p><hr><blockquote><p>📌高响应比优先（HRRN）</p></blockquote><p><img src="'+ga+'" alt=""></p><p><img src="'+sa+'" alt=""></p><hr><blockquote><p>📌总结</p></blockquote><p><img src="'+ra+'" alt=""></p><hr><blockquote><p>📌优先级调度算法</p></blockquote><p><img src="'+ca+'" alt=""></p><p><img src="'+la+'" alt=""></p><p><img src="'+_a+'" alt=""></p><p><img src="'+na+'" alt=""></p><hr><blockquote><p>📌优先级调度算法</p></blockquote><p><img src="'+ha+'" alt=""></p><p><strong>抢占式：</strong></p><p><img src="'+ua+'" alt=""></p><p><strong>非抢占式：</strong></p><p><img src="'+ba+'" alt=""></p><hr><blockquote><p>📌多级反馈队列调度算法</p></blockquote><p><img src="'+qa+'" alt=""></p><p><img src="'+ka+'" alt=""></p><hr><blockquote><p>📌总结</p></blockquote><p>适用于<strong>交互式</strong>系统</p><p><img src="'+da+'" alt=""></p><h4 id="产生死锁的原因和必要条件以及预防死锁的方法。" tabindex="-1">产生死锁的原因和必要条件以及预防死锁的方法。 <a class="header-anchor" href="#产生死锁的原因和必要条件以及预防死锁的方法。" aria-label="Permalink to &quot;产生死锁的原因和必要条件以及预防死锁的方法。&quot;">​</a></h4><p><img src="'+fa+'" alt=""></p><p><img src="'+Oa+'" alt=""></p><p><img src="'+xa+'" alt=""></p><h3 id="_4、内存管理" tabindex="-1">4、内存管理 <a class="header-anchor" href="#_4、内存管理" aria-label="Permalink to &quot;4、内存管理 &amp;#x20;&quot;">​</a></h3><h4 id="内存管理概念-程序的装入和链接、逻辑地址与物理地址、内存保护" tabindex="-1">内存管理概念（程序的装入和链接、逻辑地址与物理地址、内存保护） <a class="header-anchor" href="#内存管理概念-程序的装入和链接、逻辑地址与物理地址、内存保护" aria-label="Permalink to &quot;内存管理概念（程序的装入和链接、逻辑地址与物理地址、内存保护）&quot;">​</a></h4><blockquote><p>装入</p></blockquote><p><img src="'+Ia+'" alt=""></p><p><img src="'+Pa+'" alt=""></p><p><img src="'+Ca+'" alt=""></p><blockquote><p>链接</p></blockquote><p><img src="//image/image_yChtmaN6Rs.png" alt=""></p><p><img src="'+Sa+'" alt=""></p><p><img src="'+Ta+'" alt=""></p><p><img src="'+Fa+'" alt=""></p><p><img src="'+Aa+'" alt=""></p><h4 id="交换与覆盖" tabindex="-1">交换与覆盖 <a class="header-anchor" href="#交换与覆盖" aria-label="Permalink to &quot;交换与覆盖&amp;#x20;&quot;">​</a></h4><p><img src="'+La+'" alt=""></p><p><img src="'+va+'" alt=""></p><p><img src="'+Da+'" alt=""></p><h4 id="连续分配方式-单一连续和分区" tabindex="-1">连续分配方式（单一连续和分区） <a class="header-anchor" href="#连续分配方式-单一连续和分区" aria-label="Permalink to &quot;连续分配方式（单一连续和分区）&quot;">​</a></h4><p><strong>连续分配</strong>：指为用户进程分配的必须是一个连续空间</p><p><img src="'+Na+'" alt=""></p><p><img src="'+Ma+'" alt=""></p><p><img src="'+Ra+'" alt=""></p><p><img src="'+Ua+'" alt=""></p><p><img src="'+wa+'" alt=""></p><p><img src="'+Va+'" alt=""></p><h4 id="非连续分配方式-分页、分段和段页式" tabindex="-1">非连续分配方式（分页、分段和段页式） <a class="header-anchor" href="#非连续分配方式-分页、分段和段页式" aria-label="Permalink to &quot;非连续分配方式（分页、分段和段页式）&quot;">​</a></h4><blockquote><p>基本分页存储</p></blockquote><p>非连续分配：为用户进程分配的可以是一些分散的内存空间 </p><p>页号=逻辑地址/页面长度（取除法的整数部分）</p><p>页内偏移量=逻辑地址%页面长度（取除法的余数部分)</p><p>页面在内存中的起始位置：操作系统需要用某种数据结构记录进程各个页面的起始位置</p><p><img src="'+ja+'" alt=""></p><p><img src="'+Ha+'" alt=""></p><p><img src="'+Qa+'" alt=""></p><p><img src="'+Wa+'" alt=""></p><p><img src="'+Xa+'" alt=""></p><p><img src="'+ya+'" alt=""></p><p><img src="'+Ja+'" alt=""></p><p><img src="'+Ba+'" alt=""></p><p><img src="'+Ea+'" alt=""></p><blockquote><p>基本分段存储管理</p></blockquote><p><img src="'+Ga+'" alt=""></p><p><img src="'+Ya+'" alt=""></p><p><img src="'+Za+'" alt=""></p><p><img src="'+za+'" alt=""></p><blockquote><p>段页</p></blockquote><p><img src="'+Ka+'" alt=""></p><h4 id="虚拟内存管理-虚拟内存的基本概念、请求分页、分段、段页式存储器管理方式、页面置换算法" tabindex="-1">虚拟内存管理（虚拟内存的基本概念、请求分页、分段、段页式存储器管理方式、页面置换算法） <a class="header-anchor" href="#虚拟内存管理-虚拟内存的基本概念、请求分页、分段、段页式存储器管理方式、页面置换算法" aria-label="Permalink to &quot;虚拟内存管理（虚拟内存的基本概念、请求分页、分段、段页式存储器管理方式、页面置换算法）&quot;">​</a></h4><p><img src="'+$a+'" alt=""></p><p><img src="'+ai+'" alt=""></p><p><img src="'+ii+'" alt=""></p><p><img src="'+pi+'" alt=""></p><p><img src="'+ti+'" alt=""></p><blockquote><p>请求分页</p></blockquote><h4 id="常用的页面置换算法-最佳置换opt算法、先进先出置换fifo算法、最近最少使用置换lru算法、时钟置换clock算法" tabindex="-1">常用的页面置换算法（最佳置换OPT算法、先进先出置换FIFO算法、最近最少使用置换LRU算法、时钟置换CLOCK算法） <a class="header-anchor" href="#常用的页面置换算法-最佳置换opt算法、先进先出置换fifo算法、最近最少使用置换lru算法、时钟置换clock算法" aria-label="Permalink to &quot;常用的页面置换算法（最佳置换OPT算法、先进先出置换FIFO算法、最近最少使用置换LRU算法、时钟置换CLOCK算法）&quot;">​</a></h4><p><img src="'+oi+'" alt=""></p><p><img src="'+ei+'" alt=""></p><p><img src="'+mi+'" alt=""></p><p><img src="'+gi+'" alt=""></p><p><img src="'+si+'" alt=""></p><p><img src="'+ri+'" alt=""></p><h3 id="_5、设备管理" tabindex="-1">5、设备管理 <a class="header-anchor" href="#_5、设备管理" aria-label="Permalink to &quot;5、设备管理&quot;">​</a></h3><h4 id="i-o管理-i-o设备、i-o管理目标、i-o管理功能、i-o应用接口、i-o控制方式和i-o软件层次结构" tabindex="-1">I/O管理（I/O设备、I/O管理目标、I/O管理功能、I/O应用接⼝、I/O控制方式和I/O软件层次结构） <a class="header-anchor" href="#i-o管理-i-o设备、i-o管理目标、i-o管理功能、i-o应用接口、i-o控制方式和i-o软件层次结构" aria-label="Permalink to &quot;I/O管理（I/O设备、I/O管理目标、I/O管理功能、I/O应用接⼝、I/O控制方式和I/O软件层次结构）&quot;">​</a></h4><blockquote><p>📌I/O控制方式</p></blockquote><p><img src="'+ci+'" alt=""></p><p><img src="'+li+'" alt=""></p><p><img src="'+_i+'" alt=""></p><p><img src="'+ni+'" alt=""></p><p><img src="'+hi+'" alt=""></p><blockquote><p>📌I/O软件层次结构</p></blockquote><p><img src="'+ui+'" alt=""></p><h4 id="i-o内核子系统-i-o调度概念、高速缓存与缓冲区、设备分配与回收、假脱机技术-spooling" tabindex="-1">I/O内核子系统（I/O调度概念、高速缓存与缓冲区、设备分配与回收、假脱机技术(SPOOLing) <a class="header-anchor" href="#i-o内核子系统-i-o调度概念、高速缓存与缓冲区、设备分配与回收、假脱机技术-spooling" aria-label="Permalink to &quot;I/O内核子系统（I/O调度概念、高速缓存与缓冲区、设备分配与回收、假脱机技术(SPOOLing)&quot;">​</a></h4><p><img src="'+bi+'" alt=""></p><p><img src="'+qi+'" alt=""></p><p><img src="'+ki+'" alt=""></p><p><img src="'+di+'" alt=""></p><p><img src="'+fi+'" alt=""></p><p><img src="'+Oi+'" alt=""></p><p><img src="'+xi+'" alt=""></p><p><img src="'+Ii+'" alt=""></p><p><img src="'+Pi+'" alt=""></p><h3 id="_6、文件系统" tabindex="-1">6、文件系统 <a class="header-anchor" href="#_6、文件系统" aria-label="Permalink to &quot;6、文件系统 &amp;#x20;&quot;">​</a></h3><h4 id="文件系统基础-文件概念-文件结构-顺序文件、索引文件和索引顺序文件-目录结构-文件控制块和索引节点、单级目录结构和两级目录结构、树形目录结构和图形目录结构-文件共享-共享动机、共享方式和共享语义-文件保护-访问类型和访问控制" tabindex="-1">文件系统基础（文件概念，文件结构--顺序文件、索引文件和索引顺序文件，目录结构-文件控制块和索引节点、单级目录结构和两级目录结构、树形目录结构和图形目录结构，文件共享--共享动机、共享方式和共享语义，文件保护--访问类型和访问控制） <a class="header-anchor" href="#文件系统基础-文件概念-文件结构-顺序文件、索引文件和索引顺序文件-目录结构-文件控制块和索引节点、单级目录结构和两级目录结构、树形目录结构和图形目录结构-文件共享-共享动机、共享方式和共享语义-文件保护-访问类型和访问控制" aria-label="Permalink to &quot;文件系统基础（文件概念，文件结构--顺序文件、索引文件和索引顺序文件，目录结构-文件控制块和索引节点、单级目录结构和两级目录结构、树形目录结构和图形目录结构，文件共享--共享动机、共享方式和共享语义，文件保护--访问类型和访问控制）&quot;">​</a></h4><blockquote><p>📌顺序文件</p></blockquote><p><img src="'+Ci+'" alt=""></p><p><img src="'+Si+'" alt=""></p><blockquote><p>📌索引文件</p></blockquote><p><img src="'+Ti+'" alt=""></p><blockquote><p>📌索引顺序文件</p></blockquote><p><img src="'+Fi+'" alt=""></p><hr><blockquote><p>📌文件控制块</p></blockquote><p><img src="'+Ai+'" alt=""></p><blockquote><p>📌单级目录</p></blockquote><p><img src="'+Li+'" alt=""></p><blockquote><p>📌两级目录结构</p></blockquote><p><img src="'+vi+'" alt=""></p><blockquote><p>📌多级目录结构</p></blockquote><p><img src="'+Di+'" alt=""></p><blockquote><p>📌图形目录结构</p></blockquote><p><img src="'+Ni+'" alt=""></p><blockquote><p>📌索引节点</p></blockquote><p><img src="'+Mi+'" alt=""></p><blockquote><p>📌总结</p></blockquote><p><img src="'+Ri+'" alt=""></p><hr><blockquote><p>📌文件共享</p></blockquote><p><img src="'+Ui+'" alt=""></p><p><img src="'+wi+'" alt=""></p><hr><blockquote><p>📌文件保护</p></blockquote><p><img src="'+Vi+'" alt=""></p><p><img src="'+ji+'" alt=""></p><p><img src="'+Hi+'" alt=""></p><p><img src="'+Qi+'" alt=""></p><p><img src="'+Wi+'" alt=""></p><h4 id="文件系统实现-文件系统层次结构-目录实现-文件实现" tabindex="-1">文件系统实现（文件系统层次结构，目录实现，文件实现） <a class="header-anchor" href="#文件系统实现-文件系统层次结构-目录实现-文件实现" aria-label="Permalink to &quot;文件系统实现（文件系统层次结构，目录实现，文件实现）&quot;">​</a></h4><p><img src="'+Xi+'" alt=""></p><p><img src="'+yi+'" alt=""></p><h4 id="磁盘组织与管理-磁盘的结构、磁盘调度算法和磁盘的管理" tabindex="-1">磁盘组织与管理（磁盘的结构、磁盘调度算法和磁盘的管理） <a class="header-anchor" href="#磁盘组织与管理-磁盘的结构、磁盘调度算法和磁盘的管理" aria-label="Permalink to &quot;磁盘组织与管理（磁盘的结构、磁盘调度算法和磁盘的管理）&quot;">​</a></h4><p><img src="'+Ji+'" alt=""></p><p><img src="'+Bi+'" alt=""></p><p><img src="'+Ei+'" alt=""></p><p><img src="'+Gi+'" alt=""></p><blockquote><p>📌磁盘管理</p></blockquote><p><img src="'+Yi+'" alt=""></p><h4 id="常用的磁盘调度算法-fifo-sstf-scan-c-scan-。" tabindex="-1">常用的磁盘调度算法（FIFO，SSTF，SCAN，C-SCAN）。 <a class="header-anchor" href="#常用的磁盘调度算法-fifo-sstf-scan-c-scan-。" aria-label="Permalink to &quot;常用的磁盘调度算法（FIFO，SSTF，SCAN，C-SCAN）。&quot;">​</a></h4><p><img src="'+Zi+'" alt=""></p><p><img src="'+zi+'" alt=""></p><p><img src="'+Ki+'" alt=""></p><p><img src="'+$i+'" alt=""></p><p><img src="'+ap+'" alt=""></p><p><img src="'+ip+'" alt=""></p><p><img src="'+pp+'" alt=""></p>',295),ep=[op];function mp(gp,sp,rp,cp,lp,_p){return i(),p("div",null,ep)}const up=a(tp,[["render",mp]]);export{hp as __pageData,up as default};
