import{_ as a,o as n,c as l,O as p}from"./chunks/framework.3639b6a9.js";const o="/image/image_swnpbkCOAm.png",t="/image/image_KK8iBsXpuf.png",e="/image/image_rNixDuqXUW.png",c="/image/image_tVxhYdHHU0.png",r="/image/image_CbscRxQ79E.png",F="/image/image_bQ-Dv2AAx0.png",y="/image/image_Dnon5BxC4P.png",D="/image/image_ry6_3hEI53.png",i="/image/image_XRoIF5Pg8r.png",A="/image/image_7r53Q1zYv1.png",C="/image/image_dvRehEDxk1.png",m="/image/image_FL9esPWGWF.png",g="/image/image_hnWvHeMoh-.png",_="/image/image_meW5ujLXZm.png",h="/image/image_tSsHQH_PqT.png",f="/image/image_JAbpAD2s_k.png",d="/image/image_rars4gQa--.png",u="/image/image_JTL489-F8M.png",s="/image/image_IyvKV6v2wz.png",E="/image/image_1_iwCpDLpj.png",b="/image/image_wnfigVcjcB.png",q="/image/image_ZnsC814e6Z.png",k="/image/image_S1wXA5lkjk.png",x="/image/image_xFwNZP19pl.png",S="/image/image_Pnn70z6yIm.png",P="/image/image_8-VDaKZvyF.png",v="/image/image_yvHMPGF2fl.png",L="/image/image_EqtZdnpyuy.png",w="/image/image_Ht2as4DnH8.png",N="/image/image_vcUijpcUzD.png",T="/image/image_gr_nzQhNCD.png",Q="/image/image_XZ5REycJqN.png",O="/image/image_w-PgNuOPkW.png",j="/image/image_My5ciHmat3.png",M="/image/image_vWq51-Mewj.png",z="/image/image_rEKSK8_SGJ.png",B="/image/image_yeyu5froa1.png",U="/image/image_ivrqgGkA6t.png",W="/image/image_p1OXKGpO_l.png",H="/image/image_as2YC81zTQ.png",I="/image/image_EO8Kp_Bo2X.png",R="/image/image_fZpanbxIZo.png",J="/image/image_J4QFmS8bHA.png",V="/image/image_Sle2VQajdq.png",Z="/image/image_TKP7gnJNMi.png",X="/image/image_-XslBzcJZZ.png",K="/image/image_25bEUVmElH.png",Y="/image/image_2JMBOjMAkd.png",G="/image/二叉树遍历_Uo4wUPUtE-.png",$="/image/image_1rzIbgBEPi.png",ss="/image/image_ou8nYWXeZg.png",as="/image/image_ZD5u6-bUfi.png",ns="/image/image_pXWJ6NwILo.png",ls="/image/image_zcX1sOy1u-.png",ps="/image/image_wcP5IR1DJn.png",os="/image/image_hH3WOJuTRg.png",ts="/image/image_AkYAbtcmwd.png",es="/image/image_WH628r2EtR.png",cs="/image/image_ZjVu4SKKMF.png",rs="/image/image_oX4b_HoIqe.png",Fs="/image/image_HGZE2i79Iv.png",ys="/image/image_tFm6c4NQP4.png",Ds="/image/image_kVvi4RZFId.png",is="/image/image_YMl8b9TVvF.png",As="/image/image_HvNLCwJ8Xr.png",Cs="/image/image_yc1F5xyiAW.png",ms="/image/image_ReW8eLMMcV.png",gs="/image/image_fdmoWnj4in.png",_s="/image/image_iLPq4LPzrH.png",hs="/image/image_jYePiWWJNW.png",fs="/image/image_2OQ9i5ivAI.png",ds="/image/image_lOZ7sUC4te.png",us="/image/image_NFcN5ZVjLp.png",Es="/image/image_jl8p5j0Vtx.png",bs="/image/image_oJhYyVqs6g.png",qs="/image/image_mNKUeVqQAj.png",ks="/image/image_gjJzwJs5Fi.png",xs="/image/image_vnHGiOiIJk.png",Ss="/image/image_W3KmouHp2n.png",Ps="/image/image_6h16p9cvCy.png",vs="/image/image_dR6th1cA6c.png",Ls="/image/image__UUwAuN3mk.png",ws="/image/image_QP8xg0BOIT.png",Ns="/image/image_I-z_2Mgz8R.png",Ts="/image/image_PsBFYRcYtA.png",Qs="/image/image_jd3QKjBo7U.png",Os="/image/image__cvNqblX55.png",js="/image/image_yvW2vMbh9X.png",Ms="/image/image_wNY3Cmfx2f.png",zs="/image/image_7rUSLvYsOm.png",Bs="/image/image_J9emiZD0lR.png",Us="/image/image_XqIg-atKn2.png",Ws="/image/image_kIwWxUq6aB.png",Hs="/image/image_DFzBQGHX-6.png",Is="/image/image_wcUP7Cdd-k.png",Rs="/image/image_ghdvGWrdoQ.png",Js="/image/image_LpyXU9iR1a.png",Vs="/image/image_mOVGyKP7yK.png",Zs="/image/image_NR9gDJvjll.png",Xs="/image/image_ij35Om4ZlU.png",Ks="/image/image_lu_8lkVgqV.png",Ys="/image/image_RNNfCd0zPW.png",ra=JSON.parse('{"title":"数据结构","description":"","frontmatter":{},"headers":[],"relativePath":"introduce/ds.md","filePath":"introduce/ds.md"}'),Gs={name:"introduce/ds.md"},$s=p('<h1 id="数据结构" tabindex="-1">数据结构 <a class="header-anchor" href="#数据结构" aria-label="Permalink to &quot;数据结构&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>该文档并没有进行整理和调整，只是临时展示，等待后续调整。</p></div><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#1绪论">1、绪论</a><ul><li><a href="#1-什么是数据结构--">（1） 什么是数据结构 </a></li><li><a href="#2-基本概念和术语-----">（2） 基本概念和术语 </a></li><li><a href="#3-抽象数据类型的表示与实现---">（3） 抽象数据类型的表示与实现 </a></li><li><a href="#4-算法和算法分析">（4） 算法和算法分析</a></li></ul></li><li><a href="#2线性表">2、线性表</a><ul><li><a href="#1线性表的定义和基本操作--">（1）线性表的定义和基本操作 </a></li><li><a href="#2线性表的顺序表示和实现">（2）线性表的顺序表示和实现</a></li><li><a href="#3线性表的链式表示和实现---">3）线性表的链式表示和实现 </a></li><li><a href="#4线性表的应用">（4）线性表的应用</a></li></ul></li><li><a href="#3栈和队列">3、栈和队列</a><ul><li><a href="#1-栈和队列的基本概念----">（1） 栈和队列的基本概念 </a></li><li><a href="#2栈和队列的顺序存储结构----">（2）栈和队列的顺序存储结构 </a></li><li><a href="#3栈和队列的链式存储结构----">（3）栈和队列的链式存储结构 </a></li><li><a href="#-4栈的应用数制转换括号匹配的检验行编辑程序表达式求值-----"> （4）栈的应用：数制转换、括号匹配的检验、行编辑程序、表达式求值 </a></li></ul></li><li><a href="#4树和二叉树">4、树和二叉树</a><ul><li><a href="#1-树的定义和基本术语----">（1） 树的定义和基本术语 </a></li><li><a href="#2-二叉树定义顺序存储结构和链式存储结构遍历----">（2） 二叉树：定义、顺序存储结构和链式存储结构、遍历 </a></li><li><a href="#3线索二叉树的基本概念和构造----">（3）线索二叉树的基本概念和构造 </a></li><li><a href="#4-树和森林存储结构森林和二叉树的转换树和森林的遍历------">（4） 树和森林：存储结构、森林和二叉树的转换、树和森林的遍历 </a></li></ul></li><li><a href="#5图">5、图</a><ul><li><a href="#1-图的定义和术语----">（1） 图的定义和术语 </a></li><li><a href="#--2-图的存储结构邻接矩阵邻接表----"> （2） 图的存储结构：邻接矩阵、邻接表 </a></li><li><a href="#-3-图的遍历深度优先搜索广度优先搜索----"> （3） 图的遍历：深度优先搜索、广度优先搜索 </a></li><li><a href="#4图的基本应用-最小生成树最短路径拓扑排序和关键路径">（4）图的基本应用： 最小生成树、最短路径、拓扑排序和关键路径</a></li></ul></li><li><a href="#6查找">6、查找</a><ul><li><a href="#1-静态查找表顺序查找折半查找分块查找----">（1） 静态查找表：顺序查找、折半查找、分块查找 </a></li><li><a href="#2-动态查找表二叉排序树平衡二叉树--">（2） 动态查找表：二叉排序树、平衡二叉树 </a></li><li><a href="#-----3-哈希表"> （3） 哈希表</a></li></ul></li><li><a href="#7内部排序">7、内部排序</a><ul><li><a href="#1-基本概念------">（1） 基本概念 </a></li><li><a href="#2-插入排序直接插入排序折半插入排序希尔排序-------">（2） 插入排序：直接插入排序、折半插入排序、希尔排序 </a></li><li><a href="#3-交换排序起泡排序快速排序------">（3） 交换排序：起泡排序、快速排序 </a></li><li><a href="#4-选择排序--">（4） 选择排序 </a></li><li><a href="#5-归并排序------">（5） 归并排序 </a></li><li><a href="#6-基数排序------稳定">（6） 基数排序 稳定</a></li></ul></li></ul><h2 id="_1、绪论" tabindex="-1">1、绪论 <a class="header-anchor" href="#_1、绪论" aria-label="Permalink to &quot;1、绪论&quot;">​</a></h2><h3 id="_1-什么是数据结构" tabindex="-1">（1） 什么是数据结构 <a class="header-anchor" href="#_1-什么是数据结构" aria-label="Permalink to &quot;（1） 什么是数据结构 &amp;#x20;&quot;">​</a></h3><p>数据结构：指互相之间存在着一种或多种特定关系的数据元素的集合，包括逻辑结构，存储结构和对数据的运算。</p><p><img src="'+o+'" alt=""></p><p><img src="'+t+'" alt=""></p><p><img src="'+e+'" alt=""></p><h3 id="_2-基本概念和术语" tabindex="-1">（2） 基本概念和术语 <a class="header-anchor" href="#_2-基本概念和术语" aria-label="Permalink to &quot;（2） 基本概念和术语    &amp;#x20;&quot;">​</a></h3><h3 id="_3-抽象数据类型的表示与实现" tabindex="-1">（3） 抽象数据类型的表示与实现 <a class="header-anchor" href="#_3-抽象数据类型的表示与实现" aria-label="Permalink to &quot;（3） 抽象数据类型的表示与实现  &amp;#x20;&quot;">​</a></h3><p></p><p><img src="'+c+'" alt=""></p><h3 id="_4-算法和算法分析" tabindex="-1">（4） 算法和算法分析 <a class="header-anchor" href="#_4-算法和算法分析" aria-label="Permalink to &quot;（4） 算法和算法分析&quot;">​</a></h3><p><img src="'+r+'" alt=""></p><h3 id="_2、线性表" tabindex="-1">2、线性表 <a class="header-anchor" href="#_2、线性表" aria-label="Permalink to &quot;2、线性表&quot;">​</a></h3><h4 id="_1-线性表的定义和基本操作" tabindex="-1">（1）线性表的定义和基本操作 <a class="header-anchor" href="#_1-线性表的定义和基本操作" aria-label="Permalink to &quot;（1）线性表的定义和基本操作 &amp;#x20;&quot;">​</a></h4><p>定义：线性表是具有相同数据类型的n(n&gt;0)个数据元素的有限序列，其中n为表长，当n=0时线性表是一个空表。</p><p>插入操作 ：平均时间复杂度O(n)</p><h4 id="_2-线性表的顺序表示和实现" tabindex="-1">（2）线性表的顺序表示和实现 <a class="header-anchor" href="#_2-线性表的顺序表示和实现" aria-label="Permalink to &quot;（2）线性表的顺序表示和实现&quot;">​</a></h4><p><img src="'+F+'" alt=""></p><p><img src="'+y+'" alt=""></p><p><img src="'+D+'" alt=""></p><h4 id="_3-线性表的链式表示和实现" tabindex="-1"> （3）线性表的链式表示和实现 <a class="header-anchor" href="#_3-线性表的链式表示和实现" aria-label="Permalink to &quot;&amp;#xA;（3）线性表的链式表示和实现  &amp;#x20;&quot;">​</a></h4><p></p><p><img src="'+i+'" alt=""></p><p><img src="'+A+'" alt=""></p><p><img src="'+C+'" alt=""></p><p><img src="'+m+'" alt=""></p><p><img src="'+g+'" alt=""></p><p><img src="'+_+'" alt=""></p><p><img src="'+h+'" alt=""></p><p><img src="'+f+'" alt=""></p><p><img src="'+d+'" alt=""></p><p><img src="'+u+'" alt=""></p><p><img src="'+s+'" alt=""></p><p><img src="'+s+'" alt=""></p><h4 id="_4-线性表的应用" tabindex="-1">（4）线性表的应用 <a class="header-anchor" href="#_4-线性表的应用" aria-label="Permalink to &quot;（4）线性表的应用&quot;">​</a></h4><h3 id="_3、栈和队列" tabindex="-1"> 3、栈和队列 <a class="header-anchor" href="#_3、栈和队列" aria-label="Permalink to &quot;&amp;#xA;3、栈和队列&quot;">​</a></h3><h3 id="_1-栈和队列的基本概念" tabindex="-1">（1） 栈和队列的基本概念 <a class="header-anchor" href="#_1-栈和队列的基本概念" aria-label="Permalink to &quot;（1） 栈和队列的基本概念   &amp;#x20;&quot;">​</a></h3><p>栈：只允许在一端进行插入或删除操作的线性表。<strong>后进先出(LIFO)，插入和删除只能在栈顶操作</strong></p><h3 id="_2-栈和队列的顺序存储结构" tabindex="-1">（2）栈和队列的顺序存储结构 <a class="header-anchor" href="#_2-栈和队列的顺序存储结构" aria-label="Permalink to &quot;（2）栈和队列的顺序存储结构   &amp;#x20;&quot;">​</a></h3><p>栈：只允许在一端进行插入或删除操作的线性表 先进后出，插入和删除只能在栈顶操作</p><blockquote><p>栈的顺序存储结构</p></blockquote><p><img src="'+E+'" alt=""></p><p><img src="'+b+'" alt=""></p><p><img src="'+q+`" alt=""></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MaxSize</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#676E95;font-style:italic;"> //定义数组最大长度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">MaxSize</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> //定义数组大小</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> top</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //定义栈顶指针</span></span>
<span class="line"><span style="color:#A6ACCD;">}Sqstack</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initStack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Sqstack </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //初始化指针位置</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">insertStack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Sqstack </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> MaxSize</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;"> //判断栈是否满</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">栈已经存满</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //如果栈没有满，让指针移动一位</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //将元素插入到栈中</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deleteStack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Sqstack </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;"> //判断栈是否为空</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">栈已经空了</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  e </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> //将栈顶元素删除</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //数组指针减少1</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getTopStack</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">Sqstack </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#676E95;font-style:italic;"> //判断栈是否为空</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">栈已经空了</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  e </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">top</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> //将当前指针元素返回给e</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>队列的顺序存储结构</p></blockquote><p>队列：只允许在一端进行插入，另一端进行删除的线性表。<strong>先进先出(FIFO)</strong></p><p><img src="`+k+'" alt=""></p><p><img src="'+x+'" alt=""></p><p><img src="'+S+'" alt=""></p><p><img src="'+P+'" alt=""></p><p><img src="'+v+`" alt=""></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#define</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MaxSize</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">MaxSize</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> //定义队列</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> front</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> rear</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //对头指针和队尾指针</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">SqQueue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SqQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//初始化队头队尾指针为0</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">insertQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SqQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//判断队列是否为空</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">%</span><span style="color:#F07178;">MaxSize </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">队列已满</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将元素插入到队尾</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将队尾指针后移一位</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> MaxSize</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //如果队列已经出了元素，那么将队尾指针指向最新出队位置形成循环队列</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DeleteQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SqQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//判断队列是否为空</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">队列为空</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //将值给到队头</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">%</span><span style="color:#F07178;"> MaxSize</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getHeadQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SqQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//判断队列是否为空</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">队列为空</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  e </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">];</span><span style="color:#676E95;font-style:italic;"> //将对头的值赋值给e</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_3-栈和队列的链式存储结构" tabindex="-1"> （3）栈和队列的链式存储结构 <a class="header-anchor" href="#_3-栈和队列的链式存储结构" aria-label="Permalink to &quot;&amp;#xA;（3）栈和队列的链式存储结构   &amp;#x20;&quot;">​</a></h3><blockquote><p>链栈的存储结构</p></blockquote><p><img src="`+L+'" alt=""></p><p><img src="'+w+'" alt=""></p><p><img src="'+N+'" alt=""></p><blockquote><p>队列的链式存储结构</p></blockquote><p><img src="'+T+'" alt=""></p><p><img src="'+Q+'" alt=""></p><p><img src="'+O+'" alt=""></p><p><img src="'+j+'" alt=""></p><p><img src="'+M+`" alt=""></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">malloc.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> LinkNode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> LinkNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LinkNode</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> front</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> rear</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LinkQueue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">initQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//开辟内存空间</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkNode</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LinkNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将头结点和尾节点指向头结点</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">enQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//申请新节点</span></span>
<span class="line"><span style="color:#F07178;">  LinkNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> S </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkNode</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LinkNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//赋值操作</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//修改指针</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将新节点插入到队尾</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> S</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//修改队尾指针</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> S</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">deleteQueue</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkQueue </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//判断队列是否为空</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">队列为空</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将节点指向头结点后一位</span></span>
<span class="line"><span style="color:#F07178;">  LinkNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将值带回（删除）</span></span>
<span class="line"><span style="color:#F07178;">  e </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//修改头结点下一位指针</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//也就是让头结点指针指向第二位</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//判断当前删除元素是最后一个元素时</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#89DDFF;">==</span><span style="color:#F07178;">s</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//将队尾指针指向对头</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">rear</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">front</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//释放删除节点空间</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">s</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_4-栈的应用-数制转换、括号匹配的检验、行编辑程序、表达式求值" tabindex="-1"> （4）栈的应用：数制转换、括号匹配的检验、行编辑程序、表达式求值 <a class="header-anchor" href="#_4-栈的应用-数制转换、括号匹配的检验、行编辑程序、表达式求值" aria-label="Permalink to &quot;&amp;#x20;&amp;#xA;（4）栈的应用：数制转换、括号匹配的检验、行编辑程序、表达式求值    &amp;#x20;&quot;">​</a></h3><p><img src="`+z+'" alt=""></p><p><img src="'+B+'" alt=""></p><p><img src="'+U+'" alt=""></p><p>（5） 队列的应用：杨辉三角</p><h2 id="_4、树和二叉树" tabindex="-1">4、树和二叉树 <a class="header-anchor" href="#_4、树和二叉树" aria-label="Permalink to &quot;4、树和二叉树&quot;">​</a></h2><h3 id="_1-树的定义和基本术语" tabindex="-1"> （1） 树的定义和基本术语 <a class="header-anchor" href="#_1-树的定义和基本术语" aria-label="Permalink to &quot;&amp;#xA;（1） 树的定义和基本术语   &amp;#x20;&quot;">​</a></h3><p><img src="'+W+'" alt=""></p><p><img src="'+H+'" alt=""></p><ol><li>树是n（n≥0）个结点的有限集合，n = 0时，称为<strong>空树</strong>。</li><li>空树中应满足: <ol><li>有且仅有一个特定的称为根的结点。</li><li>当n &gt; 1时，其余结点可分为m（m&gt;0）个互不相交的有限集合T1，T2，…，Tm，其中每个集合本身又是一棵树，并且称为根结点的子树</li></ol></li><li>度：树中一个结点的孩子个数称为该结点的度。所有结点的度的最大值是树的度。</li><li>度大于0的结点称为分支结点，度为0的结点称为叶子结点。</li><li>结点的层次（深度）：从上往下数。</li><li>结点的高度：从下往上数。</li><li>树的高度（深度）：树中结点的层数。</li><li>有序树：逻辑上看，树中结点的各子树从左至右是有次序的，不能互换。</li><li>若树中结点的各子树从左至右是有次序的，不能互换，则该树称为有序树，否则称为无序树。</li><li>树中两个结点之间的路径是由这两个结点之间所经过的结点序列构成的，而路径长度是路径上所经过的边的个数。</li><li>森林：森林是m（m≥0）棵互不相交的树的集合。</li></ol><hr><h3 id="_2-二叉树-定义、顺序存储结构和链式存储结构、遍历" tabindex="-1"> （2） 二叉树：定义、顺序存储结构和链式存储结构、遍历 <a class="header-anchor" href="#_2-二叉树-定义、顺序存储结构和链式存储结构、遍历" aria-label="Permalink to &quot;&amp;#xA;（2） 二叉树：定义、顺序存储结构和链式存储结构、遍历   &amp;#x20;&quot;">​</a></h3><p><img src="'+I+'" alt=""></p><p><img src="'+R+'" alt=""></p><p><img src="'+J+'" alt=""></p><p><img src="'+V+'" alt=""></p><p><img src="'+Z+'" alt=""></p><p><img src="'+X+'" alt=""></p><p><img src="'+K+'" alt=""></p><p>层次遍历：</p><p><img src="'+Y+'" alt=""></p><p>先后中序遍历：</p><ul><li>先序遍历（NLR）根左右</li><li>中序遍历（LNR）左根右</li><li>后序遍历（LRN）左右根</li></ul><p><img src="'+G+`" alt=""></p><hr><blockquote><p>📌先序遍历代码</p></blockquote><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">preOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">BiTree </span><span style="color:#A6ACCD;font-style:italic;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">T</span><span style="color:#89DDFF;">!=NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">preOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">lchild</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">preOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">rchild</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>📌中序遍历代码</p></blockquote><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//中序遍历</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">BiTree </span><span style="color:#A6ACCD;font-style:italic;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">T</span><span style="color:#89DDFF;">!=NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">inOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">lchild</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">inOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">rchild</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><blockquote><p>📌后序遍历代码</p></blockquote><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">postOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">BiTree </span><span style="color:#A6ACCD;font-style:italic;">T</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">T</span><span style="color:#89DDFF;">!=NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">postOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">lchild</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">postOrder</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">rchild</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">T</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><hr><h3 id="_3-线索二叉树的基本概念和构造" tabindex="-1"> （3）线索二叉树的基本概念和构造 <a class="header-anchor" href="#_3-线索二叉树的基本概念和构造" aria-label="Permalink to &quot;&amp;#xA;（3）线索二叉树的基本概念和构造   &amp;#x20;&quot;">​</a></h3><h3 id="_4-树和森林-存储结构、森林和二叉树的转换、树和森林的遍历" tabindex="-1">（4） 树和森林：存储结构、森林和二叉树的转换、树和森林的遍历 <a class="header-anchor" href="#_4-树和森林-存储结构、森林和二叉树的转换、树和森林的遍历" aria-label="Permalink to &quot;（4） 树和森林：存储结构、森林和二叉树的转换、树和森林的遍历     &amp;#x20;&quot;">​</a></h3><p><img src="`+$+'" alt=""></p><p><img src="'+ss+'" alt=""></p><p><img src="'+as+'" alt=""></p><p><img src="'+ns+'" alt=""></p><p>（5） 树和二叉树的应用：赫夫曼树及赫夫曼编码</p><p>二叉排序树查找长度：</p><p><img src="'+ls+'" alt=""></p><p><img src="'+ps+'" alt=""></p><p><img src="'+os+'" alt=""></p><p><img src="'+ts+'" alt=""></p><h2 id="_5、图" tabindex="-1">5、图 <a class="header-anchor" href="#_5、图" aria-label="Permalink to &quot;5、图&quot;">​</a></h2><h3 id="_1-图的定义和术语" tabindex="-1"> （1） 图的定义和术语 <a class="header-anchor" href="#_1-图的定义和术语" aria-label="Permalink to &quot;&amp;#xA;（1） 图的定义和术语   &amp;#x20;&quot;">​</a></h3><p><img src="'+es+'" alt=""></p><p><img src="'+cs+'" alt=""></p><p><img src="'+rs+'" alt=""></p><p><img src="'+Fs+'" alt=""></p><p><img src="'+ys+'" alt=""></p><p><img src="'+Ds+'" alt=""></p><p><img src="'+is+'" alt=""></p><p><img src="'+As+'" alt=""></p><h3 id="_2-图的存储结构-邻接矩阵、邻接表" tabindex="-1"> （2） 图的存储结构：邻接矩阵、邻接表 <a class="header-anchor" href="#_2-图的存储结构-邻接矩阵、邻接表" aria-label="Permalink to &quot;&amp;#x20; &amp;#xA;（2） 图的存储结构：邻接矩阵、邻接表   &amp;#x20;&quot;">​</a></h3><p><img src="'+Cs+'" alt=""></p><p><img src="'+ms+'" alt=""></p><h3 id="_3-图的遍历-深度优先搜索、广度优先搜索" tabindex="-1"> （3） 图的遍历：深度优先搜索、广度优先搜索 <a class="header-anchor" href="#_3-图的遍历-深度优先搜索、广度优先搜索" aria-label="Permalink to &quot;&amp;#x20;&amp;#xA;（3） 图的遍历：深度优先搜索、广度优先搜索   &amp;#x20;&quot;">​</a></h3><p>广度优先搜索</p><p><img src="'+gs+'" alt=""></p><p><img src="'+_s+'" alt=""></p><p><img src="'+hs+'" alt=""></p><p><img src="'+fs+'" alt=""></p><h3 id="_4-图的基本应用-最小生成树、最短路径、拓扑排序和关键路径" tabindex="-1"> （4）图的基本应用： 最小生成树、最短路径、拓扑排序和关键路径 <a class="header-anchor" href="#_4-图的基本应用-最小生成树、最短路径、拓扑排序和关键路径" aria-label="Permalink to &quot;&amp;#xA;（4）图的基本应用： 最小生成树、最短路径、拓扑排序和关键路径&quot;">​</a></h3><p><img src="'+ds+'" alt=""></p><p><img src="'+us+'" alt=""></p><p>最短路径</p><p>BFS算法</p><p><img src="'+Es+'" alt=""></p><p>Dij算法：</p><p><img src="'+bs+'" alt=""></p><h2 id="_6、查找" tabindex="-1">6、查找 <a class="header-anchor" href="#_6、查找" aria-label="Permalink to &quot;6、查找&quot;">​</a></h2><h3 id="_1-静态查找表-顺序查找、折半查找、分块查找" tabindex="-1"> （1） 静态查找表：顺序查找、折半查找、分块查找 <a class="header-anchor" href="#_1-静态查找表-顺序查找、折半查找、分块查找" aria-label="Permalink to &quot;&amp;#xA;（1） 静态查找表：顺序查找、折半查找、分块查找   &amp;#x20;&quot;">​</a></h3><p></p><blockquote><p>顺序查找</p></blockquote><p><img src="'+qs+'" alt=""></p><p><img src="'+ks+'" alt=""></p><blockquote><p>📌折半查找</p></blockquote><p><img src="'+xs+'" alt=""></p><p><img src="'+Ss+`" alt=""></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> elem</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //动态数组基址</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> TabLen</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> //表的长度</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">SSTable</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">SearchHalf</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">SSTable </span><span style="color:#A6ACCD;font-style:italic;">S</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">e</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> low </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> high </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TabLen</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> mid</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    mid </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">elem</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">mid</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> e</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">S</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">elem</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">mid</span><span style="color:#89DDFF;">]&gt;</span><span style="color:#F07178;">e</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      high </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      low </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-动态查找表-二叉排序树、平衡二叉树" tabindex="-1"> （2） 动态查找表：二叉排序树、平衡二叉树 <a class="header-anchor" href="#_2-动态查找表-二叉排序树、平衡二叉树" aria-label="Permalink to &quot;&amp;#xA;（2） 动态查找表：二叉排序树、平衡二叉树 &amp;#x20;&quot;">​</a></h3><h3 id="_3-哈希表" tabindex="-1"> （3） 哈希表 <a class="header-anchor" href="#_3-哈希表" aria-label="Permalink to &quot;&amp;#x20;    &amp;#xA;（3） 哈希表&quot;">​</a></h3><p><img src="`+Ps+'" alt=""></p><p><img src="'+vs+'" alt=""></p><p><img src="'+Ls+'" alt=""></p><p><img src="'+ws+'" alt=""></p><p><img src="'+Ns+'" alt=""></p><p><img src="'+Ts+'" alt=""></p><p><img src="'+Qs+'" alt=""></p><p><img src="'+Os+'" alt=""></p><p><img src="'+js+'" alt=""></p><p><img src="'+Ms+'" alt=""></p><h2 id="_7、内部排序" tabindex="-1">7、内部排序 <a class="header-anchor" href="#_7、内部排序" aria-label="Permalink to &quot;7、内部排序&quot;">​</a></h2><h4 id="_1-基本概念" tabindex="-1"> （1） 基本概念 <a class="header-anchor" href="#_1-基本概念" aria-label="Permalink to &quot;&amp;#xA;（1） 基本概念     &amp;#x20;&quot;">​</a></h4><p><img src="'+zs+'" alt=""></p><p><img src="'+Bs+'" alt=""></p><h4 id="_2-插入排序-直接插入排序、折半插入排序、希尔排序" tabindex="-1"> （2） 插入排序：直接插入排序、折半插入排序、希尔排序 <a class="header-anchor" href="#_2-插入排序-直接插入排序、折半插入排序、希尔排序" aria-label="Permalink to &quot;&amp;#xA;（2） 插入排序：直接插入排序、折半插入排序、希尔排序      &amp;#x20;&quot;">​</a></h4><p>最少n-1趟</p><p><img src="'+Us+'" alt=""></p><p><img src="'+Ws+'" alt=""></p><p><img src="'+Hs+'" alt=""></p><h4 id="_3-交换排序-起泡排序、快速排序" tabindex="-1"> （3） 交换排序：起泡排序、快速排序 <a class="header-anchor" href="#_3-交换排序-起泡排序、快速排序" aria-label="Permalink to &quot;&amp;#xA;（3） 交换排序：起泡排序、快速排序     &amp;#x20;&quot;">​</a></h4><p>冒泡排序（稳定）</p><p><img src="'+Is+'" alt=""></p><p>快速排序（不稳定）</p><p><img src="'+Rs+'" alt=""></p><p><img src="'+Js+`" alt=""></p><blockquote><p>📌快速排序</p></blockquote><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;"># include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//将整个表划分为左右字表</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Partiton</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">A</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">low</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">high</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//定义基轴</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> pivot </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//用low和high搜索基轴最后放下的位置</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//比枢轴小的元素移动到左端</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> high </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#F07178;"> pivot</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">--</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//比枢轴大的元素移动到右端</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> high </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> pivot</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> pivot</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">QuickSort</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">A</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">low</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">high</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//跳出递归条件</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 划分表</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> pivotpos </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Partiton</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">);</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//左字表排序</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">QuickSort</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> pivotpos </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">//右子表排序</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">QuickSort</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">pivotpos</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> A</span><span style="color:#C792EA;">[]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">10</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> low </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> high </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">QuickSort</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">high</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_4-选择排序" tabindex="-1"> （4） 选择排序 <a class="header-anchor" href="#_4-选择排序" aria-label="Permalink to &quot;&amp;#xA;（4） 选择排序 &amp;#x20;&quot;">​</a></h4><p>简单选择排序（不稳定）n-1躺</p><p><img src="`+Vs+'" alt=""></p><h4 id="_5-归并排序" tabindex="-1"> （5） 归并排序 <a class="header-anchor" href="#_5-归并排序" aria-label="Permalink to &quot;&amp;#xA;（5） 归并排序     &amp;#x20;&quot;">​</a></h4><p><img src="'+Zs+'" alt=""></p><p><img src="'+Xs+'" alt=""></p><p><img src="'+Ks+`" alt=""></p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Merge</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">A</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">low</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">high</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">mid</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> B </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">*)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">n </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">sizeof(</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> k</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> j</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将A数组复制到B数组中</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">];</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//将小的值赋给A数组</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> k </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> k </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;">k</span><span style="color:#89DDFF;">++)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]&lt;=</span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">j</span><span style="color:#89DDFF;">])</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">k</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">++];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">k</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">j</span><span style="color:#89DDFF;">++];</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> mid</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">k</span><span style="color:#89DDFF;">++]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">++];</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">j </span><span style="color:#89DDFF;">&lt;=</span><span style="color:#F07178;"> mid</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">A</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">k</span><span style="color:#89DDFF;">++]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">B</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">j</span><span style="color:#89DDFF;">++];</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">MergeSort</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">A</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">low</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">high</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">low </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">/</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MergeSort</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //左半部分归并排序</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">MergeSort</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> mid </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //右半部分归并排序</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">Merge</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">A</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> low</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> high</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> mid</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> //归并</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="_6-基数排序-稳定" tabindex="-1"> （6） 基数排序 稳定 <a class="header-anchor" href="#_6-基数排序-稳定" aria-label="Permalink to &quot;&amp;#xA;（6） 基数排序      稳定&quot;">​</a></h4><p><img src="`+Ys+'" alt=""></p><p>（7） 各种内部排序方法的比较讨论</p>',190),sa=[$s];function aa(na,la,pa,oa,ta,ea){return n(),l("div",null,sa)}const Fa=a(Gs,[["render",aa]]);export{ra as __pageData,Fa as default};
